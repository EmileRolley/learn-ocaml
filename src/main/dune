(library
 (name learnocaml_server_args)
 (modules Learnocaml_server_args)
 (libraries cmdliner
            learnocaml_server_lib)
)

(executable
 (package learn-ocaml)
 (public_name learn-ocaml)
 (name learnocaml_main)
 (modes byte)
 (ocamlc_flags :standard -custom)
 (flags (:standard -linkall
         (:include linking_main.sexp)))
 (modules Learnocaml_main)
 (libraries cmdliner
            sha
            markup
            markup-lwt
            learnocaml_process_repository_lib
            learnocaml_server_lib
            learnocaml_server_args
            learnocaml_report)
)

(executable
 (package learn-ocaml-client)
 (public_name learn-ocaml-client)
 (name learnocaml_client)
 (modes byte)
 (ocamlc_flags :standard -custom)
 (flags (:standard -linkall
         (:include linking_client.sexp)))
 (modules Learnocaml_client)
 (libraries cmdliner
 	    sha
            lwt.unix
            lwt_utils
            cohttp.lwt
            grading_cli
            learnocaml_data
	    learnocaml_store
            learnocaml_api)
)

(executable
 (package learn-ocaml)
 (public_name learn-ocaml-server)
 (name learnocaml_server_main)
 (modules learnocaml_server_main)
 (libraries learnocaml_server_args)
 (flags       (:standard
               (:include linking_server.sexp)))
)

(rule
  (targets linking_main.sexp)
  (mode    fallback)
  (action  (with-stdout-to %{targets} (echo "()"))))
(rule
  (targets linking_client.sexp)
  (mode    fallback)
  (action  (with-stdout-to %{targets} (echo "()"))))
(rule
  (targets linking_server.sexp)
  (mode    fallback)
  (action  (with-stdout-to %{targets} (echo "()"))))
